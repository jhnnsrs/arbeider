# Generated by Django 2.2.12 on 2020-05-28 15:22

import delt.fields
import delt.helpers
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(editable=False, help_text='A unique identifier of this Node on this Platform, calculated hashing the package and interface', max_length=1000, unique=True)),
                ('variety', models.CharField(help_text='Is this Node a Frontend, Backend, DaskExlusiv Node?', max_length=1000)),
                ('realm', models.CharField(help_text='The realm this Node was registered to?', max_length=1000)),
                ('package', models.CharField(help_text='The Package this Node belongs to', max_length=1000)),
                ('interface', models.CharField(help_text='The unique interface of this Node within the Package', max_length=1000)),
                ('publishers', delt.fields.PublishersField(default=dict, help_text='The publishers thie Node will send to')),
                ('name', models.CharField(help_text='The Package that channel belongs to', max_length=1000)),
                ('description', models.TextField(help_text='A Short description for the Node')),
                ('inputs', delt.fields.InputsField(default=list)),
                ('outputs', delt.fields.OutputsField(default=list)),
                ('nodeclass', models.CharField(default='classic-node', max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='Pod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('podclass', models.CharField(default='classic-pod', max_length=400)),
                ('status', models.CharField(default='pending', max_length=300)),
                ('provider', models.CharField(help_text='The provisioner that created this Pod', max_length=1000)),
                ('unique', models.UUIDField(default=uuid.uuid4, help_text='The Unique identifier of this POD', unique=True)),
                ('reference', models.CharField(blank=True, help_text='The Unique identifier of this POD', max_length=1000, null=True, unique=True)),
                ('persistent', models.BooleanField(default=False)),
                ('node', models.ForeignKey(help_text='The node this Pod is an instance of', on_delete=django.db.models.deletion.CASCADE, related_name='pods', to='delt.Node')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(editable=False, help_text='A unique identifier of this Route on this Platform, calculated hashing the package and interface', max_length=1000, unique=True)),
                ('url', models.URLField(help_text='The url to the Route', max_length=1000)),
                ('package', models.CharField(help_text='The Package this Node belongs to', max_length=1000)),
                ('provider', models.CharField(help_text='The Provider of this Route', max_length=1000)),
                ('interface', models.CharField(help_text='The unique interface of this Node within the Package', max_length=1000)),
                ('name', models.CharField(help_text='The Package that channel belongs to', max_length=1000)),
                ('description', models.TextField(help_text='A Short description for the Node')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='delt.Node')),
            ],
        ),
        migrations.CreateModel(
            name='Provision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(help_text='The Provider', max_length=1000)),
                ('subselector', models.CharField(help_text='The selector', max_length=1000)),
                ('reference', models.CharField(default=uuid.uuid4, help_text='The Unique identifier of this Provision', max_length=1000, unique=True)),
                ('status', models.CharField(blank=True, help_text='This provisions status', max_length=1000)),
                ('node', models.ForeignKey(help_text='The node this provision connects', on_delete=django.db.models.deletion.CASCADE, related_name='provisions', to='delt.Node')),
                ('pod', models.ForeignKey(blank=True, help_text='The pod this provision connects', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provisions', to='delt.Pod')),
                ('user', models.ForeignKey(help_text='This provision creator', max_length=1000, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputs', delt.fields.InputsField(blank=True, help_text='The Inputs', null=True)),
                ('outputs', delt.fields.OutputsField(blank=True, help_text='The Outputs', null=True)),
                ('settings', delt.fields.SettingsField(default=delt.helpers.get_default_job_settings, max_length=1000)),
                ('statuscode', models.IntegerField(default=1500)),
                ('statusmessage', models.CharField(default='Pending', max_length=500)),
                ('reference', models.CharField(default=uuid.uuid4, help_text='The Nodeinstance this Job lives on', max_length=400)),
                ('selector', delt.fields.SelectorField(blank=True, help_text='The Selectivity for Instances of this Node (especially unique Frontends)', max_length=400)),
                ('unique', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pod', models.ForeignKey(blank=True, help_text='The Pod this Job lives on', null=True, on_delete=django.db.models.deletion.CASCADE, to='delt.Pod')),
            ],
            options={
                'permissions': (('queue_job', 'Queue Job'),),
            },
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Not Set', max_length=100, null=True)),
                ('diagram', django.contrib.postgres.fields.jsonb.JSONField(help_text='The Charted diagram', max_length=50000)),
                ('description', models.CharField(default='Add a Description', max_length=50000)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assignation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default=uuid.uuid4, help_text='The Unique identifier of this Provision', max_length=1000, unique=True)),
                ('status', models.CharField(help_text='This provisions status', max_length=1000)),
                ('job', models.ForeignKey(help_text='The job this provision connects', on_delete=django.db.models.deletion.CASCADE, related_name='assignations', to='delt.Node')),
                ('pod', models.ForeignKey(help_text='The pod this provision connects', on_delete=django.db.models.deletion.CASCADE, related_name='assignations', to='delt.Pod')),
            ],
        ),
    ]
