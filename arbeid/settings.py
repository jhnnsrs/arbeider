"""
Django settings for arbeid project.

Generated by 'django-admin startproject' using Django 2.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from .modeselektor import ArnheimDefaults

# General Debug or Production Settings
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#             _____  _   _ _    _ ______ _____ __  __
#       /\   |  __ \| \ | | |  | |  ____|_   _|  \/  |
#      /  \  | |__) |  \| | |__| | |__    | | | \  / |
#     / /\ \ |  _  /| . ` |  __  |  __|   | | | |\/| |
#    / ____ \| | \ \| |\  | |  | | |____ _| |_| |  | |
#   /_/    \_\_|  \_\_| \_|_|  |_|______|_____|_|  |_|
#                  Arnheim Settings


    
defaults = ArnheimDefaults()
ARNHEIM = defaults
# Zarr Related
ZARR_COMPRESSION = defaults.zarr_compression
ZARR_DTYPE = defaults.zarr_dtype

# Larvik Related
LARVIK_APIVERSION = "0.1"
LARVIK_FILEVERSION = "0.1"

# Postgres Settings
POSTGRES_DB = os.environ.get("POSTGRES_DB", None)
POSTGRES_USER = os.environ.get("POSTGRES_USER", "user")
POSTGRES_PASSWORD = os.environ.get("POSTGRES_PASSWORD", "password")
POSTGRES_HOST =  os.environ.get("POSTGRES_SERVICE_HOST", "localhost")
POSTGRES_PORT = os.environ.get("POSTGRES_SERVICE_PORT_POSTGRESPORT", 5432)

# Dask Setings =
DASK_SCHEDULER_HOST =  os.environ.get("DASK_SCHEDULER_SERVICE_HOST", "localhost")
DASK_SCHEDULER_PORT = os.environ.get("DASK_SCHEDULER_SERVICE_DASKPORT", 5432)

#             ____  _____  ____  ______ _____ _____  ______ _____
#       /\   |  _ \|  __ \|  _ \|  ____|_   _|  __ \|  ____|  __ \
#      /  \  | |_) | |__) | |_) | |__    | | | |  | | |__  | |__) |
#     / /\ \ |  _ <|  _  /|  _ <|  __|   | | | |  | |  __| |  _  /
#    / ____ \| |_) | | \ \| |_) | |____ _| |_| |__| | |____| | \ \
#   /_/    \_\____/|_|  \_\____/|______|_____|_____/|______|_|  \_\
#                           Arbeider Settings

MODULES = os.environ.get("ARNHEIM_MODULES", "").split(",")


#    _____            _               _
#   |  __ \          (_)             | |
#   | |  | | ___ _ __ ___   _____  __| |
#   | |  | |/ _ \ '__| \ \ / / _ \/ _` |
#   | |__| |  __/ |  | |\ V /  __/ (_| |
#   |_____/ \___|_|  |_| \_/ \___|\__,_|
#       Derived Settings for Django

MEDIA_ROOT = str(defaults.media_path)

# S3 Settings

#S3 Settings
S3_PUBLIC_DOMAIN = defaults.s3_public_domain
AWS_ACCESS_KEY_ID = defaults.s3_key
AWS_SECRET_ACCESS_KEY = defaults.s3_secret
AWS_S3_ENDPOINT_URL  = str(defaults.s3_endpointurl)
AWS_STORAGE_BUCKET_NAME = "test"
AWS_S3_URL_PROTOCOL = defaults.s3_protocol
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_USE_SSL = True
AWS_S3_SECURE_URLS = False # Should resort to True if using in Production behind TLS

ZARR_BUCKET = "zarr"
MEDIA_BUCKET = "media"
FILES_BUCKET = "files"


ALLOWED_HOSTS = ["*"]

MEDIA_URL = defaults.media_url
# Overwrite Django Settings
DEBUG = defaults.debug
SECRET_KEY = defaults.secret_key
STORAGE_MODE = defaults.storage
DEFAULT_FILE_STORAGE = defaults.storage_default
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'larvik',
    'flow',
    'elements',
] + MODULES



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'arbeid.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Channel layer definitions
# http://channels.readthedocs.io/en/latest/topics/channel_layers.html
CHANNEL_LAYERS = {
    "default": {
        # This example app uses the Redis channel layer implementation channels_redis
        "BACKEND": defaults.channel_backend,
        "CONFIG": {
            "hosts": [(defaults.channel_host, defaults.channel_port)],
        },
    },
}

# ASGI_APPLICATION should be set to your outermost router
ASGI_APPLICATION = 'arbeid.routing.application'
WSGI_APPLICATION = 'arbeid.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": defaults.sql_engine,
        "NAME": defaults.db_name,
        "USER": defaults.db_user,
        "PASSWORD":defaults.db_password,
        "HOST": defaults.db_host,
        "PORT": int(defaults.db_port),
        **defaults.db_kwargs
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': defaults.loglevel,
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_ROOT = defaults.static_path
STATIC_URL = defaults.static_url
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

FIXTURE_DIRS =  [ "fixtures"]
